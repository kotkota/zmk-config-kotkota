/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        SPCE {
            bindings = <&kp SPACE>;
            key-positions = <29 28>;
        };

        harden_sign {
            bindings = <&kp RBKT>;
            key-positions = <31 32>;
        };

        comma {
            bindings = <&comma>;
            key-positions = <25 26>;
        };

        period {
            bindings = <&period>;
            key-positions = <26 27>;
        };
    };

    macros {
        comma: comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(COMMA)) &kp SPACE>;
            label = "COMMA";
        };

        period: period {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(PERIOD)) &kp SPACE>;
            label = "PERIOD";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-caps-word";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            continue-list = <EXCLAMATION>;
        };

        cmd_spc_enter: cmd_spc_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_SPC_ENTER";
            #binding-cells = <0>;
            bindings = <&mt LCMD SPACE>, <&kp ENTER>;
        };

        cmd_enter_spc: cmd_enter_spc {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_ENTER_SPC";
            #binding-cells = <0>;
            bindings = <&mt LCMD ENTER>, <&kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LS(LCMD) ESC            &kp Q         &kp W        &kp E       &kp R       &kp T             &kp Y           &kp U       &kp I            &kp O        &kp P            &mt RBKT LBKT
&mt LA(LCMD) TAB            &mt LSHIFT A  &mt LCTRL S  &mt LALT D  &mt LCMD F  &kp G             &kp H           &mt RCMD J  &mt RALT K       &mt RCTRL L  &mt RSHIFT SEMI  &lt 4 APOS
&mt LA(LC(LS(LCMD))) GRAVE  &kp Z         &kp X        &kp C       &kp V       &kp B             &kp N           &kp M       &kp COMMA        &kp DOT      &kp SLASH        &lt 3 BACKSLASH
                                                       &lt 2 DEL   &mo 1       &cmd_spc_enter    &cmd_enter_spc  &mo 2       &lt 1 BACKSPACE
            >;

            label = "Default";
        };

        num_layer {
            bindings = <
&trans  &kp N1               &kp N2        &kp N3           &kp N4             &kp N5                            &kp PG_UP  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &none       &kp MINUS
&trans  &mt LSHIFT NUMBER_6  &mt LCTRL N7  &mt LALT N8      &mt LCMD NUMBER_9  &kp N0                            &kp PG_DN  &kp LEFT      &kp DOWN  &kp RIGHT      &none       &kp EQUAL
&trans  &comma               &period       &mt UNDER MINUS  &mt PLUS EQUAL     &mt RIGHT_BRACKET LEFT_BRACKET    &none      &kp HOME      &none     &kp END        &kp RSHIFT  &trans
                                           &kp BACKSPACE    &trans             &kp LC(SPACE)                     &trans     &trans        &trans
            >;

            label = "Numbers/Nav";
        };

        symb_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH       &kp DLLR              &kp PRCNT                &kp CARET  &kp AMPS  &kp ASTERISK  &kp LPAR           &kp RPAR       &kp UNDER
&trans  &kp CARET  &kp AMPS  &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &none      &none     &none         &kp LBRC           &kp RBRC       &kp PLUS
&kp LT  &kp GT     &kp LBKT  &kp RBKT       &kp LEFT_BRACE        &kp RIGHT_BRACE          &none      &none     &none         &kp RS(RA(EQUAL))  &kp RA(EQUAL)  &kp RS(RA(MINUS))
                             &kp BACKSPACE  &kp LG(SPACE)         &kp ENTER                &kp SPACE  &trans    &kp DELETE
            >;

            label = "Symbols";
        };

        media_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp C_POWER                           &none         &none         &none         &none         &none         &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP
&caps_word                            &none         &none         &none         &none         &none         &none           &none             &none       &kp UP      &caps_word         &kp LS(LA(LC(LG(SQT))))
&kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &sys_reset      &none             &kp LEFT    &kp DOWN    &kp RIGHT          &none
                                                                  &trans        &trans        &trans        &trans          &trans            &trans
            >;

            label = "Media";
        };

        window {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &mt LG(LC(LA(LS(I)))) LG(LC(LA(I)))          &mt LG(LC(LA(LS(UP)))) LA(LG(LC(UP)))      &mt LG(LC(LA(LS(P)))) LG(LC(LA(P)))          &none
&none  &none  &none  &none  &none  &none    &none  &none  &mt LG(LC(LA(LS(LEFT)))) LG(LC(LA(LEFT)))    &mt LG(LC(LA(LS(L)))) LG(LC(LA(L)))        &mt LG(LA(LC(LS(RIGHT)))) LG(LC(LA(RIGHT)))  &none
&none  &none  &none  &none  &none  &none    &none  &none  &mt LG(LC(LA(LS(COMMA)))) LG(LC(LA(COMMA)))  &mt LG(LC(LA(LS(DOWN)))) LG(LC(LA(DOWN)))  &mt LS(LA(LC(LG(SLASH)))) LA(LC(LG(SLASH)))  &none
                     &none  &none  &none    &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
